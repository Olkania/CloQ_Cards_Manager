FORMAT: 1A
HOST: https://systemgenerowaniakartczasupracy.apiblueprint.org/

# System generowania kart czasu pracy

Opis aplikacji

` `

**Allowed HTTPs requests:**

`PUT`

`POST`

`GET`

`DELETE`

` `

**Description of usual server responses:**

`100` Continue

`200` OK

`201` Created

`204` No Content

`400` Bad Request

`403` Forbidden

`404` Not Found

`405` Method Not Allowed

`500` Internal Server Error

`502` Bad Gateway

`503` Service Unavailable

` `

## Employees Data [/employees]

### List All Employees [GET]
+ Request (application/json)

    + Headers
   
            Authentication: Token
        
+ Response 200 (application/json)

    + Body
    
            {    
                [
                    {
                        "Message": "List of all employees: ",
                        "employees": 
                        [
                            {
                                "EmployeeID": 10010422,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            
                            }, {
                                "EmployeeID": 10010432,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            }, {
                                "EmployeeID": 10010420,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            }, 
                        ]
                    }
                ]
            }
            
+ Response 400 (application/json)

    + Body
    
            {
                "Massage": "Bad Request"
            }
            

### Add [POST/employees/EmployeeID={EmployeeID}&Login={Login}&Department={Department}&ManagerID={ManagerID}&PositionID={PositionID}]

+ Parameters
    + EmployeeID (number)
    + Login (text)
    + Department (text)
    + ManagerID (number)
    + PositionID (number)

+ Response 200 (application/json)

    + Body
    
            {
                "Message": "Post done"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "Message": "Bad Request"
            }
            

### Delete [DELETE/employees/EmployeeID={EmployeeID}]

+ Parameters

    + EmployeeID (number)


+ Response 200 (application/json)

    + Body
    
            {
                "Message": "Deleted"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "Message": "Bad Request"
            }
        

### Edit [PUT/employees/EmployeeID={EmployeeID}&Login={Login}&Department={Department}&ManagerID={ManagerID}&PositionID={PositionID}]

+ Parameters
    + EmployeeID (number)
    + Login (text)
    + Department (text)
    + ManagerID (number)
    + PositionID (number)

+ Response 200 (application/json)

    + Body
    
            {
                "Message": "Post done"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "Message": "Bad Request"
            }