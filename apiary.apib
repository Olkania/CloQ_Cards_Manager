FORMAT: 1A
HOST: https://systemgenerowaniakartczasupracy.apiblueprint.org/

# System of generating employees' clockcards

It is an API


# Group User API

## User [/users/{?Login,Password,FirstName,LastName,AccountType,Email,AccountNo}]

+ Parameters

    + Login (text)
    + Password (number)
    + FirstName (text)
    + LastName (text)
    + AccountType (text)
    + Email (text)
    + AccountNo (text)

### Add New User [POST]
+ Request

        {
            "Login": "jankow4822",
            "Password": 4932
            "FirstName": "Jan",
            "LastName": "Kowalski",
            "AccountType": "Employee",
            "E-mail": "jankowalski@gmail.com",
            "AccountNo": "PL11240000000000009999117429"
        }
        
+ Response 200 (application/json)

        {
            "Meesage": "Add: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }
        
### Edit User [PUT]
+ Response 200 (application/json)

        {
            "Meesage": "Edit: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### Delete User [DELETE]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### List All Users [GET]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }


# Group Employee API

## Employee [/employee/{?EmployeeID,Login,Department,ManagerID,PositionID}]

+ Parameters

    + EmployeeID (number)
    + Login (text)
    + Department (text)
    + ManagerID (number)
    + PositionID (number)

### Add New Employee [POST/employees/EmployeeID={EmployeeID}&Login={Login}&Department={Department}&ManagerID={ManagerID}&PositionID={PositionID]
+ Request

        {
            "EmployeeID": 10010422,
            "Login": "jankow4822",
            "Department": "DepA",
            "ManagerID": 101,
            "PositionID": 53
        }
        
+ Response 200 (application/json)

        {
            "Meesage": "Add: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }
        
### Edit Employee [PUT/users/EmployeeID={EmployeeID}&Login={Login}&Department={Department}&ManagerID={ManagerID}&PositionID={PositionID}]
+ Response 200 (application/json)

        {
            "Meesage": "Edit: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### Delete Employee [DELETE/employees/EmployeeID={EmployeeID}]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### List All Employees [GET]
+ Request (application/json)

    + Headers 
        
            Authentication: Token

+ Response 200 (application/json)

    + Body

            {    
                [
                    {
                        "Message": "List of all employees: ",
                        "employees": 
                        [
                            {
                                "EmployeeID": 10010422,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            }, {
                                "EmployeeID": 10010432,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            }, {
                                "EmployeeID": 10010420,
                                "Login": "jankow4822",
                                "Department": "DepA",
                                "ManagerID": 101,
                                "PositionID": 53
                            }, 
                        ]
                    }
                ]
            }
            
+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }
  
            
# Group Manager API

## Manager [/managers/{?ManagerID,Login}]

+ Parameters

    + ManagerID (number)
    + Login (text)

### Add New Manager [POST]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### Delete Manager [DELETE]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

### List All Managers [GET]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }


# Group Position API

## Position [/positions/{?PositionID,PositionName,Salary}]

+ Parameters

    + PositionID (number)
    + PositionName (text)
    + Salary (number)

### List All Positions [POST]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }

# Group Register API

## Register [/registers/{?EmployeeID,GateID,TimeIn,TimeOut}]

+ Parameters

    + EmployeeID (number)
    + GateID (number)
    + TimeIn (number)
    + TimeOut (number)


# Group Leave API

## Leave [/leaves/{?LeaveID,EmployeeID,DateStart,DateEnd,LeaveType,Acceptance}]

+ Parameters

    + LeaveID (number)
    + EmployeeID (number)
    + DateStart (number)
    + DateEnd (number)
    + LeaveType (text)
    + Acceptance (number)

### Add New Leave [POST]
+ Response 200 (application/json)

        {
            "Meesage": "Delete: Done."
        }

+ Response 400 (application/json)

        {
            "Message": "Bad Request"
        }


# Group Gate API

## Gate [/gates/{?EmployeeID,Login,Department,ManagerID,PositionID}]

+ Parameters

    + EmployeeID (number)
    + Login (text)
    + Department (text)
    + ManagerID (number)
    + PositionID (number)